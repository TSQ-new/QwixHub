local Finity = loadstring(game:HttpGet("https://pastebin.com/raw/Tb5xUnk9"))()
local FinityWindow = Finity.new(true)

FinityWindow.ChangeToggleKey(Enum.KeyCode.RightShift)
Finity.settitle("RbxHub | BETA")
local lib = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
local Pets = lib.Directory.Pets
local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
    vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    wait(1)
    vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
end)

local Run_Service = game:GetService("RunService")
local rs = Run_Service.RenderStepped
local GameLibrary = require(game:GetService("ReplicatedStorage"):WaitForChild("Framework"):WaitForChild("Library"))

local o = 0

local AutoFarmEnabled
local AFMethod = "Normal"
local ChestG
local ACFarm

local CollectRankRewerd
local CollectVIPRankRewerd

local AutoTrippleCoin
local AutoTrippleDamage
local AutoSuperLucky
local AutoUltraLucky

local AutoMakeGolden
local AutoMakeRainbow

local ChoiceEgg
local EnabledOpen


local Chests = {
    "Magma Chest",
    "Enchanted Chest", "Hell Chest", "Haunted Chest", "Angel Chest", "Grand Heaven Chest",
    "Giant Tech Chest"; "Giant Steampunk Chest";
}

local AreaWorldTable = {}
for _, v in pairs(game:GetService("ReplicatedStorage").Game.Coins:GetChildren()) do
    for _, b in pairs(v:GetChildren()) do
        table.insert(AreaWorldTable, b.Name)
    end
    table.insert(AreaWorldTable, v.Name)
end

function FarmCoin(CoinID, PetID)
    lib.Network.Invoke("join coin",CoinID,{PetID})
    lib.Network.Fire("Farm Coin",CoinID,PetID)
end

function AllChests()
    local returntable = {}
    local ListCoins = game.workspace['__THINGS']['__REMOTES']["get coins"]:InvokeServer({})[1]
    for i,v in pairs(ListCoins) do
        local shit = v
        shit["index"] = i
        for aa,bb in pairs(AreaWorldTable) do
            if string.find(v.n, bb) then
                local thing = string.gsub(v.n, bb.." ", "")
                if table.find(Chests, thing) then
                    shit.n = thing
                    table.insert(returntable, shit)
                end
            end
        end
    end
    return returntable
end

local function GetEggs()
    local Eggs = {}
    for _, v in pairs(game:GetService("ReplicatedStorage").Game.Eggs:GetChildren()) do
        for i, v1 in pairs(v:GetChildren()) do
            table.insert(Eggs, v1.Name)
        end
    end
    return Eggs
end


function enchant(uid, powername, powertier)
    x = lib.Network.Invoke("Enchant Pet", uid);
    y = lib.Network.Invoke("Get Stats", game.Players.LocalPlayer, true);
    powers = {}
    for i, v in pairs(y["Pets"]) do
        if v["uid"] == uid then
            powers = v["powers"]
        end
    end
    for i, v in pairs(powers) do
        if v[1] == powername and v[2] == powertier then
            return true
        end
    end
    return false
end

function startEnchant(uid, powername, powertier)
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer,
            [2] = true
        }
    }
    enchantspet = lib.Network.Invoke("Get Stats", game.Players.LocalPlayer, true);
    if enchantspet == nil or enchantspet["Pets"] == nil then
        return
    end
    for i, v in pairs(enchantspet["Pets"]) do
        if v["uid"] == uid then
            enchantspet = v["powers"]
        end
    end
    for i, v in pairs(enchantspet) do
        if v[1] == powername and v[2] == powertier then
            return
        end
    end
    repeat
        enchanted = enchant(uid, powername, powertier)
    until enchanted == true
end




spawn(function()
    while wait() do
        if CollectRankRewerd then
            lib.Network.Invoke("Redeem Rank Rewards")
        end
        if CollectVIPRankRewerd then
            lib.Network.Invoke("Redeem VIP Rewards")
        end
        if AutoTrippleCoin then
            lib.Network.Fire("activate boost", "Triple Coins")
        end
        if AutoTrippleDamage then
            lib.Network.Fire("activate boost", "Triple Damage")
        end
        if AutoSuperLucky then
            lib.Network.Fire("activate boost", "Super Lucky")
        end
        if AutoUltraLucky then
            lib.Network.Fire("activate boost", "Ultra Lucky")
        end
    end
end)

spawn(function()
    while wait() do
        if EnabledOpen then
            lib.Network.Invoke("buy egg",ChoiceEgg, false)
        end
    end
end)

spawn(function()
    while wait(3) do
        if AutoMakeGolden or AutoMakeRainbow then
            UpdateStats()
        end
    end
end)


function UpdateStats()
    spawn(function()
        local ew = {}
        local we = {}
        local uids = {}
        local args = {
            [1] = {
                [1] = game:GetService("Players").LocalPlayer,
                [2] = true
            }
        }
        Info = lib.Network.Invoke("Get Stats", game.Players.LocalPlayer, true);
        pets = Info["Pets"]
        for i, v in pairs(pets) do
            id = v.id
            petname = Pets[id].name
            if AutoMakeGolden then
                if v["r"] == nil and v["dm"] == nil and v["g"] == nil  then
                    table.insert(ew, petname)
                    uids[v.uid] = petname
                    if not table.find(we, petname) then
                        table.insert(we, petname)
                    end
                end
            elseif AutoMakeRainbow then
                if v["g"] ~= nil  then
                    table.insert(ew, petname)
                    uids[v.uid] = petname
                    if not table.find(we, petname) then
                        table.insert(we, petname)
                    end
                end
            end
        end
        table.sort(ew)
        MakeGolden(we, ew, uids)
    end)
end




function findpet(pets, name)
    total = 0
    for i, v in pairs(pets) do
        if v == name then
            total = total + 1
        end
    end
    return total, name
end



function MakeGolden(we, ew, uids)
    local goldenuids = {}
    for i, v in pairs(we) do
        xd, name = findpet(ew, v)
        if xd >= 6 then
            added = 0
            for i2, v2 in pairs(uids) do
                if v2 == name and added < 6 then
                    added = added + 1
                    table.insert(goldenuids, i2)
                end
            end
            if AutoMakeGolden then
                lib.Network.Invoke("Use Golden Machine", goldenuids);
            end
            if AutoMakeRainbow then
                lib.Network.Invoke("Use Rainbow Machine", goldenuids);
            end
        end
    end
end

function GetMyPets()
    local returntable = {}
    for i, v in pairs(GameLibrary.Save.Get().Pets) do
        if v.e then
            table.insert(returntable, v.uid)
        end
    end
    return returntable
end
function GetCoins(area)
    local returntable = {}
    local ListCoins = game.workspace['__THINGS']['__REMOTES']["get coins"]:InvokeServer({})[1]
    for i, v in pairs(ListCoins) do
        if FarmingArea == 'All' or table.find(IMightKillMyselfCauseOfThis[FarmingArea], v.a) then
            local shit = v
            shit["index"] = i
            table.insert(returntable, shit)
        end
    end
    return returntable
end
function ClosestPart()
    local dist = math.huge
    local target = nil
    for i, v in pairs(game:GetService("Workspace")["__THINGS"].Coins:GetChildren()) do
        if v.ClassName == "Folder" then
            if v:FindFirstChild("Coin") then
                if v.Coin.Transparency == 0 then
                    local magnitude = (v.Coin.Position - game:GetService("Players").LocalPlayer.Character.Head.Position).magnitude
                    if magnitude < dist then
                        dist = magnitude
                        target = v.Name
                    end
                end
            end
        end
    end
    return target
end
local just
local AVPets = {}
spawn(function()
    while wait() do
        if AutoFarmEnabled then
            if AFMethod == "Normal" then
                just = ClosestPart()
                for i, v in pairs(game:GetService("Workspace")["__THINGS"].Pets:GetChildren()) do
                    if v.ClassName == "Part" then
                        lib.Network.Invoke("join coin",just,{v.Name})
                        lib.Network.Fire("Farm Coin",tostring(just),v.Name)
                    end
                end
                repeat rs:wait() until ClosestPart() ~= nil 
            elseif AFMethod == "Chest" then
                for i,v in pairs(AllChests()) do
                    if (v.n == ChestG) then
                        for i, b in pairs(game:GetService("Workspace")["__THINGS"].Pets:GetChildren()) do
                            if b.ClassName == "Part" then
                                lib.Network.Invoke("join coin",v.index,{b.Name})
                                lib.Network.Fire("Farm Coin",tostring(v.index),b.Name)
                            end
                        end
                        repeat rs:wait() until not game:GetService("Workspace")["__THINGS"].Coins:FindFirstChild(v.index) or #game:GetService("Workspace")["__THINGS"].Coins[v.index].Pets:GetChildren() == 0
                    end
                end
            end
        end
        if ACFarm then
            for i,v in pairs(AllChests()) do
                if (v.n == "Grand Heaven Chest" or v.n == "Angel Chest") then
                    warn(v.n)
                    for i, b in pairs(game:GetService("Workspace")["__THINGS"].Pets:GetChildren()) do
                        if b.ClassName == "Part" then
                            lib.Network.Invoke("join coin",v.index,{b.Name})
                            lib.Network.Fire("Farm Coin",tostring(v.index),b.Name)
                        end
                    end
                    repeat rs:wait() until v.index ~= nil
                end
            end
        end
    end
end)


function CoinTrack()
    local gamelibrary = require(game:GetService("ReplicatedStorage").Framework.Library)
    local Save = gamelibrary.Save.Get
    local Commas = gamelibrary.Functions.Commas
    local types = {}
    local menus = game:GetService("Players").LocalPlayer.PlayerGui.Main.Right
    for i, v in pairs(menus:GetChildren()) do
        if v.ClassName == 'Frame' and v.Name ~= 'Rank' and not string.find(v.Name, "2") then
            table.insert(types, v.Name)
        end
    end
    function get(thistype)
        return Save()[thistype]
    end
    if o > 0 then
        for i, v in pairs(types) do
            if menus:FindFirstChild(v .. "2") then
                menus:FindFirstChild(v .. "2"):Remove()
            end
        end
        o = 0
        return
    end
    pcall(function()
        menus.Diamonds.LayoutOrder = 99990
        if menus['Tech Coins'] then
            menus['Tech Coins'].LayoutOrder = 99992
        end
        if menus['Fantasy Coins'] then
            menus['Fantasy Coins'].LayoutOrder = 99996
        end
        menus.Coins.LayoutOrder = 99998
        menus.UIListLayout.HorizontalAlignment = 2
    end)
    _G.MyTypes = {}
    for i, v in pairs(types) do
        if menus:FindFirstChild(v .. "2") then
            menus:FindFirstChild(v .. "2"):Destroy()
        end
    end
    for i, v in pairs(types) do
        if not menus:FindFirstChild(v .. "2") then
            local tempmaker = menus:FindFirstChild(v):Clone()
            tempmaker.Name = tostring(tempmaker.Name .. "2")
            tempmaker.Parent = menus
            tempmaker.Size = UDim2.new(0, 200, 0, 35)
            tempmaker.LayoutOrder = tempmaker.LayoutOrder + 1
            _G.MyTypes[v] = tempmaker
        end
    end
    menus.Diamonds2.Add.Visible = false
    o = o + 1
    for i, v in pairs(types) do
        spawn(function()
            local megatable = {}
            local imaginaryi = 1
            local ptime = 0
            local last = tick()
            local now = last
            local TICK_TIME = 0.5
            while true do
                if ptime >= TICK_TIME then
                    while ptime >= TICK_TIME do
                        ptime = ptime - TICK_TIME
                    end
                    local currentbal = get(v)
                    megatable[imaginaryi] = currentbal
                    local diffy = currentbal - (megatable[imaginaryi - 120] or megatable[1])
                    imaginaryi = imaginaryi + 1
                    _G.MyTypes[v].Amount.Text = tostring(Commas(diffy) .. " in 60s")
                    _G.MyTypes[v]["Amount_odometerGUIFX"].Text = tostring(Commas(diffy) .. " in 60s")
                end
                task.wait(0.001)
                now = tick()
                ptime = ptime + (now - last)
                last = now
            end
        end)
    end
end



local Home = FinityWindow:Category("Home")
local AutoFarm = FinityWindow:Category("AutoFarm")

local Info = Home:Sector("Pet Simulator X")
Info:Cheat("Label", "~ Script by: TSQ#4013 and awdas#8777")
Info:Cheat("Label", "~ User Interface Library: FinityUI")
Info:Cheat("Label", "~ To minimize, press Right Control")
Info:Cheat("Label", "~ Last Update: November 5.")

local AutoFarm_Fast = AutoFarm:Sector("AutoFarm")

AutoFarm_Fast:Cheat("Checkbox", "AutoFarm", function(State)
    AutoFarmEnabled = State
end)

local AC

game:GetService("Workspace")["__THINGS"].Orbs.ChildAdded:Connect(function(v)
    if AC then
        lib.Network.Fire("claim orbs",{v.Name})
    end
end)


AutoFarm_Fast:Cheat("Checkbox", "Instant Collect Orbs", function(State)
    AC = State
end)

local AutoFarmMethods = AutoFarm:Sector("Settings")

AutoFarmMethods:Cheat("Dropdown", "Method", function(Option)
    AFMethod = Option
end, {
    options = {
        "Normal",
        "Chest"}
})
AutoFarmMethods:Cheat("Dropdown", "Chests", function(Option)
    ChestG = Option
end, {
    options = Chests
})

local AngelChestsFarm = AutoFarm:Sector("Angels Chests Farm")



AngelChestsFarm:Cheat("Checkbox", "Instant Collect Orbs", function(State)
    ACFarm = State
end)


local Pets = FinityWindow:Category("Pets")

local AutoEgg = Pets:Sector("Auto Egg")
AutoEgg:Cheat("Checkbox", "Enabled", function(State)
    EnabledOpen = State
end)

AutoEgg:Cheat("Dropdown", "Choice Egg", function(Option)
    ChoiceEgg = Option
end, {
    options = GetEggs()
})

AutoEgg:Cheat("Button", "Remove Anim", function()
    for i,v in pairs(getgc(true)) do
        if (typeof(v) == 'table' and rawget(v, 'OpenEgg')) then
            v.OpenEgg = function()
                return
            end
        end
     end
end)

-- local AutoEnch = Pets:Sector("Auto Enchant")

-- local PetsTable = {
-- 	"Loading"
-- }

-- spawn(function()
-- 	while true do
-- 		local args = {
-- 			[1] = {
-- 				[1] = game:GetService("Players").LocalPlayer,
-- 				[2] = true
-- 			}
-- 		}
-- 		PetsTable1 = lib.Network.Invoke("Get Stats", game.Players.LocalPlayer, true);
-- 		if PetsTable1 ~= nil and PetsTable1["Pets"] ~= nil then
-- 			PetsTable2 = PetsTable1["Pets"]
-- 			table.clear(PetsTable)
-- 			for i, v in pairs(PetsTable2) do
-- 				name = v["nk"]
-- 				pet = Pets[v["id"]].name
-- 				pet_name = pet .. "," .. name
-- 				warn(pet_name)
-- 				table.insert(PetsTable, pet_name)
-- 			end
-- 			wait(3)
-- 		end
-- 	end
-- end)

-- AutoEnch:Cheat("Dropdown", "Pet, Pet Name", function(Option)
-- 	print(Option)
-- end, {
-- 	options = PetsTable
-- })




-- AutoEnch:Cheat("Dropdown", "Choice Egg", function(Option)
-- 	-- Сюда то как ты собрался передавать имя
-- end, {
-- 	options = {
-- 		"Coins",
-- 		"Fantasy Coins",
-- 		"Tech Coins",
-- 		"Strength",
-- 		"Diamonds",
-- 		"Magnet",
-- 		"Glittering",
-- 		"Royalty"
-- 	}
-- })

local AutoMake = Pets:Sector("Auto Make")
AutoMake:Cheat("Checkbox", "Auto Make Golden", function(State)
    AutoMakeGolden = State
end)

AutoMake:Cheat("Checkbox", "Auto Make Rainbow", function(State)
    AutoMakeRainbow = State
end)

local Misc = FinityWindow:Category("Misc")
local Other = Misc:Sector("Other")

Other:Cheat("Button", "Give all Gamepass", function()
    local gmppath = require(game:GetService("ReplicatedStorage").Framework.Modules.Client["5 | Gamepasses"])
    gmppath.Owns = function()
        return true
    end
end)

Other:Cheat("Button", "Redeem Codes", function()
    lib.Network.Invoke("redeem twitter code","its1million")
end)


Other:Cheat("Checkbox", "Coin Tracker", function(State)
    CoinTrack()
end)

Other:Cheat("Checkbox", "Collect Rank Rewards", function(State) 
    CollectRankRewerd = State
end)

Other:Cheat("Checkbox", "Collect VIP Rewards", function(State)
    CollectVIPRankRewerd = State
end)

Other:Cheat("Checkbox", "Auto Tripple Coin Boost", function(State)
    AutoTrippleCoin = State
end)

Other:Cheat("Checkbox", "Auto Triple Damage Boost", function(State)
    AutoTrippleDamage = State
end)

Other:Cheat("Checkbox", "Auto Super Lucky Boost", function(State)
    AutoSuperLucky = State
end)

Other:Cheat("Checkbox", "Auto Ultra Lucky Boost", function(State)
    AutoUltraLucky = State
end)

Other:Cheat("Slider", "WalkSpeed", function(Value)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
end, {
    min = 0,
    max = 500,
    suffix = ""
})

Other:Cheat("Slider", "Jump Power", function(Value)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
end, {
    min = 0,
    max = 500,
    suffix = ""
})

local GUIS = Misc:Sector("Other")

GUIS:Cheat("Dropdown", "Open Guis", function(Option)
    if Option == "Golden" then
        game:GetService("Players").LocalPlayer.PlayerGui.Golden.Enabled = true
    elseif Option == "Upgrades" then
        game:GetService("Players").LocalPlayer.PlayerGui.Upgrades.Enabled = true
    elseif Option == "FusePets" then
        game:GetService("Players").LocalPlayer.PlayerGui.FusePets.Enabled = true
    elseif Option == "Rainbow" then
        game:GetService("Players").LocalPlayer.PlayerGui.Rainbow.Enabled = true
    elseif Option == "Collection" then
        game:GetService("Players").LocalPlayer.PlayerGui.Collection.Enabled = true
    elseif Option == "DarkMatter" then
        game:GetService("Players").LocalPlayer.PlayerGui.DarkMatter.Enabled = true
    elseif Option == "Merchant" then
        game:GetService("Players").LocalPlayer.PlayerGui.Merchant.Enabled = true
    elseif Option == "EnchantPets" then
        game:GetService("Players").LocalPlayer.PlayerGui.EnchantPets.Enabled = true
    end
end, {
    options = {
        "Golden",
        "Upgrades",
        "FusePets",
        "Rainbow",
        "Collection",
        "DarkMatter",
        "Merchant",
        "EnchantPets"
    }
})
